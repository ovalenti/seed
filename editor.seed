/*
 * Copyright (c) 2020, Olivier Valentin
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

#ifndef EDITOR_SEED
#define EDITOR_SEED

#include "base.seed"
#include "basic_io.seed"

"1024 {EDITOR.BUFFLEN} [STORE]"
"{EDITOR.BUFFLEN}* [SBRK] {EDITOR.BUFF} [STORE]"

// Copy a byte, if between bounds
// Eats 2 char offsets relative to the buffer start (from, to)
"{"
	// check destination
"	[DUP]"
"	{"
		// ok
		// calculate absolute destination
"		{EDITOR.BUFF}* [ADD]"
		
		// check source
"		[SWAP]"
"		[DUP]"
"		{"
			// ok
"			{EDITOR.BUFF}* [ADD]"
"			[PEEK]"
"			[SWAP]"
"			[POKE]"
"		}"
"		{"
			// bad source, use \0
"			[DROP] 0"
"			[SWAP]"
"			[POKE]"
"		}"
"		{[SWAP]}"
"		3 [ROT] {EDITOR.BUFFLEN}* [GE]"
"		? [DROP] !"
"	}"
"	{"
		// bad destination
"		[DROP]"
"		[DROP]"
"	}"
"	{[SWAP]}"
"	3 [ROT] {EDITOR.BUFFLEN}* [GE]"
"	? [DROP] !"
"} {EDITOR.COPY} [STORE]"

// Eat one character and insert at current position
"{"
	// make a hole
"	{EDITOR.BUFFLEN}*"
"	{"
"		[DUP]"
"		[DUP]"
"		1 [ADD]"
"		[EDITOR.COPY]"
"		1 [SUB]"
"		[DUP] {EDITOR.PTR}* [GT]"
"	} ??"
"	[DROP]"
	// insert
"	{EDITOR.PTR}* {EDITOR.BUFF}* [ADD]"
"	[POKE]"
"} {EDITOR.INSERT} [STORE]"

// Delete at current position
"{"
"	{EDITOR.PTR}*"
"	{"
"		[DUP]"
"		[DUP]"
"		1 [ADD]"
"		[SWAP]"
"		[EDITOR.COPY]"
"		1 [ADD]"
"		[DUP] {EDITOR.BUFFLEN}* [LT]"
"	} ??"
"	[DROP]"
"} {EDITOR.DELETE} [STORE]"

// return the value currently pointed to by EDITOR.PTR
"{ {EDITOR.BUFF}* {EDITOR.PTR}* [ADD] [PEEK] } {EDITOR.POINTED_CHAR} [STORE]" 

// move to the end of current line
"{"
"	{"
"		{ {EDITOR.PTR}* 1 [ADD] {EDITOR.PTR} [STORE] 1 }"
"		{0}"
"		{[SWAP]}"
"		[EDITOR.POINTED_CHAR] [EDITOR.IS_EOL] ? [DROP] !"
"	} ??"
"} {EDITOR.GO_EOL} [STORE]"

// return offset to the start of the current line
"{"
"	{EDITOR.PTR}*"
"	{"
"		[DUP]"
"		{ 0 }"
"		{"
"			[DUP] 1 [SUB]"
"			{EDITOR.BUFF}* [ADD] [PEEK]"
"			{\r} [PEEK] [EQ] [NOT]"
"			[DUP] { [SWAP] 1 [SUB] [SWAP] } [SWAP] ?"
"		}"
"		{[SWAP]}"
"		3 [ROT] 0 [GT] ? [DROP] !"
"	} ??"
"} {EDITOR.LINESTART} [STORE]"

// Test whether the character is an eol (0 or \r)
"{"
"	[DUP]"
"	0 [EQ]"
"	[SWAP] {\r} [PEEK] [EQ]"
"	[OR]"
"} {EDITOR.IS_EOL} [STORE]"

// Redraw the whole line
"{"
"	{\e[2K\r\0} [PRINTSTR]"
"	[EDITOR.LINESTART]"
"	[DUP]"
"	{EDITOR.BUFF}* [ADD]"
"	{"
"		[DUP]"
"		1 [ADD] [SWAP]"
"		[PEEK]"
"		[DUP]"
"		{[OUTC] 1}"
"		{[DROP] 0}"
"		{[SWAP]}"
"		3 [ROT] [EDITOR.IS_EOL] ?"
"		[DROP] !"
"	} ?? [DROP]"
	
"	{\r\0} [PRINTSTR]"

"	{EDITOR.PTR}* [SWAP] [SUB] [DUP]"
"	{"
"		{\e[\0} [PRINTSTR]"
"		[PRINTINT]"
"		{C\0} [PRINTSTR]"
"		0"
"	} [SWAP] 0 [EQ] [NOT] ?"
"	[DROP]"
"} {EDITOR.REDRAW} [STORE]"

"{"
"	0 {EDITOR.PTR} [STORE]"
"	0 {EDITOR.INSERTING} [STORE]"
"	0 {EDITOR.BUFF}* [POKE]"
"	{\e[2K\r\0} [PRINTSTR]"
"	{"
"		[INC]"
"		{EDITOR.CC} [STORE]"
"		{"
			// navigate mode
"			{"
"				{EDITOR.PTR} [DUP] * 1 [ADD] [SWAP] [STORE]"
"			} {EDITOR.CC}* {l} [PEEK] [EQ] ?"
"			{"
"				{EDITOR.PTR} [DUP] * 1 [SUB] [SWAP] [STORE]"
"			} {EDITOR.CC}* {h} [PEEK] [EQ] ?"
"			{"
"				[EDITOR.GO_EOL]"
"			} {EDITOR.CC}* {$} [PEEK] [EQ] ?"
"			{"
"				[EDITOR.LINESTART] {EDITOR.PTR} [STORE]"
"			} {EDITOR.CC}* {^} [PEEK] [EQ] ?"
"			{"
"				[EDITOR.LINESTART] 1 [SUB] {EDITOR.PTR} [STORE]"
"			} {EDITOR.CC}* {j} [PEEK] [EQ] ?"
"			{"
"				[EDITOR.GO_EOL] {EDITOR.PTR}* 1 [ADD] {EDITOR.PTR} [STORE]"
"			} {EDITOR.CC}* {k} [PEEK] [EQ] ?"
"			{"
"				1 {EDITOR.INSERTING} [STORE]"
"			} {EDITOR.CC}* {i} [PEEK] [EQ] ?"
"			{"
"				[EDITOR.DELETE]"
"			} {EDITOR.CC}* {x} [PEEK] [EQ] ?"
"			{"
"				[EDITOR.BUFF] [INC] [DROP]"
"			} {EDITOR.CC}* {r} [PEEK] [EQ] ?"
"		}"
"		{"
			// insert mode
"			{"
"				{EDITOR.CC}* [EDITOR.INSERT]"
"				{EDITOR.PTR}* 1 [ADD] {EDITOR.PTR} [STORE]"
"			} {EDITOR.CC}* {\e} [PEEK] [EQ] [NOT] ?"
"			{"
"				0 {EDITOR.INSERTING} [STORE]"
"			} {EDITOR.CC}* {\e} [PEEK] [EQ] ?"
"		}"
"		{[SWAP]}"
"		{EDITOR.INSERTING}* ? [DROP] !"
	
"		[EDITOR.REDRAW]"
		
		// check for quit
"		{EDITOR.CC}* 0x4 [EQ] [NOT]"
"	} ??"

"} {EDITOR.MAIN} [STORE]"

 #endif
