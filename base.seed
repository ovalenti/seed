/*
 * Copyright (c) 2020, Olivier Valentin
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

#ifndef BASE_SEED
#define BASE_SEED

// Exchange 2 elements on top of stack
"{ 1 [ROT] } {SWAP} [STORE]"

// boolean negation
"{ 1 [GE] 1 [XOR] } {NOT} [STORE]"

// equal
"{ [SUB] [NOT] } {EQ} [STORE]"

// less-than
"{ [GE] [NOT] } {LT} [STORE]"

// greater-than
"{ [SWAP] [LT] } {GT} [STORE]"

// HEAP is the start of allocatable space
// HEAP_FREE is the start of free space
"{HEAP}* {HEAP_FREE} [STORE]"

// Eat an amount in bytes, and reserve space on heap. Returns pointer.
"{"
"	{HEAP_FREE}*"
"	[DUP]"
"	2 [ROT] [ADD]"
"	{HEAP_FREE} [STORE]"
"} {SBRK} [STORE]"




 #endif
